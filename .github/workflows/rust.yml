---
name: "CI Rust"

"on":
  pull_request:
  merge_group:
  push:
    branches:
      - devel

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:

  # ----------------------------------- #
  # Detect changes
  # ----------------------------------- #
  file-changes:
    runs-on: ubuntu-latest
    outputs:
      rust-src-or-ci-changed: ${{ steps.filter.outputs.rust-src-or-ci-changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            rust-src-or-ci-changed:
              - '.github/**/*'
              - 'rust/**/*'
              - 'python/avdutils/**/*'

  # ----------------------------------- #
  # Cargo build, test and linting
  # ----------------------------------- #
  cargo_build_and_test:
    name: Cargo build, test and linting
    runs-on: ubuntu-latest
    needs: [file-changes]
    if: needs.file-changes.outputs.rust-src-or-ci-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - run: rustup update
      - run: cargo fmt --verbose
      - run: cargo clippy --all-targets --all-features
      - run: cargo build --all-targets --all-features
      - run: cargo test --all-targets --all-features
      - run: |
          cargo install cargo-deny
          cargo deny check

  # ----------------------------------- #
  # Python build and test
  # ----------------------------------- #
  python_build_and_test:
    name: Python ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [file-changes]
    if: needs.file-changes.outputs.rust-src-or-ci-changed == 'true'
    strategy:
      fail-fast: false
      matrix:
        # macos-13 covers x64 and macos-latest covers arm
        os: [ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest]
        python: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - os: "ubuntu-latest"
            python: "3.11"
            tox-arg: "-e coverage,report"
            coverage: true
    steps:
      - uses: actions/checkout@v4
        # This is needed for arm machines since they don't ship with 2024 edition.
      - name: Upgrade rust and cargo
        run: rustup update stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox
        run: |
          pip install tox tox-gh-actions --upgrade
      - name: Run pytest via tox
        working-directory: python/avdutils
        # Running tox  which will build the package (including rust).
        # For most runs without an environment set here. The environment is mapped with the tox gh-action plugin.
        # For coverage we specify for the coverage environment.
        run: |
          tox ${{ matrix.tox-arg }}
      - name: Upload coverage from pytest
        # Coverage only runs for ubuntu x64 on python 3.11.
        if: matrix.coverage
        uses: actions/upload-artifact@v4
        with:
          name: pytest-avdutils-coverage
          path: python/avdutils/coverage.xml
