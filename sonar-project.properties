sonar.projectKey=aristanetworks_avd
sonar.organization=aristanetworks-1

# Path to sources
sonar.sources=\
    python-avd/,\
    python/,\
    ansible_collections/arista/avd/plugins/

# Exclude generated classes and ANTA related code while in preview
sonar.exclusions=\
    python-avd/tests/**,\
    python-avd/pyavd/_eos_cli_config_gen/schema/__init__.py,\
    python-avd/pyavd/_eos_designs/schema/__init__.py,\
    python-avd/pyavd/_eos_designs/eos_designs_facts/schema/protocol.py,\
    python-avd/pyavd/_cv/api/**,\
    python-avd/pyavd/_anta/**,\
    python-avd/pyavd/api/_anta/**,\
    python/**/tests/**,\
    ansible_collections/arista/avd/plugins/action/anta_workflow.py

# disable SCM exclusions to get the compiled templates
sonar.scm.exclusions.disabled=true

# Exclude compiled templates from duplication detection
sonar.cpd.exclusions =\
    python-avd/pyavd/_eos_cli_config_gen/j2templates/compiled_templates,\
    python-avd/pyavd/_eos_designs/j2templates/compiled_templates

# Ignore issues on all compiled templates using regex match
# Using the first line import that we are not using anywhere else for now
sonar.issue.ignore.allfile =\
    "from jinja2.runtime import .*"

# Path to tests
sonar.tests=\
    python-avd/tests/,\
    python/avdutils/tests/

# Python version
sonar.python.version=\
    3.10,\
    3.11,\
    3.12,\
    3.13

sonar.python.coverage.reportPaths=\
    python-avd/coverage.xml,\
    python/avdutils/coverage.xml,\
    ansible_collections/arista/avd/*coverage.xml
