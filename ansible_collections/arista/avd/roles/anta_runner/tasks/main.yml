# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
---
- name: Verify Requirements
  delegate_to: localhost
  when: avd_requirements is not defined and avd_verify_requirements | default(true)
  arista.avd.verify_requirements:
    requirements: "{{ lookup('file', requirements_path ~ '/requirements.txt').splitlines() }}"
    avd_ignore_requirements: "{{ avd_ignore_requirements | default(false) }}"
  vars:
    requirements_path: "{{ (role_path | split('/'))[0:-2] | join('/') }}"
  run_once: true
  register: avd_requirements

- name: Create required output directories if not present
  when: avd_create_directories | arista.avd.default(true)
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0o775"
  loop:
    - "{{ anta_dir }}"
    - "{{ avd_catalogs_dir }}"
    - "{{ user_catalogs_dir }}"
    - "{{ anta_reports_dir }}"
    - "{{ anta_runner_logs_dir }}"
  delegate_to: localhost
  run_once: true
  check_mode: false

- name: Run ANTA
  arista.avd.anta_workflow:
    device_list: "{{ anta_devices }}"
    avd_catalogs:
      enabled: "{{ avd_catalogs_enabled }}"
      output_dir: "{{ avd_catalogs_dir }}"
      structured_config_dir: "{{ structured_dir }}"
      structured_config_suffix: "{{ avd_structured_config_file_format }}"
      allow_bgp_vrfs: "{{ avd_catalogs_allow_bgp_vrfs }}"
      filters: "{{ avd_catalogs_filters | arista.avd.default([]) }}"
    user_catalogs:
      input_dir: "{{ user_catalogs_dir }}"
    runner:
      timeout: "{{ anta_runner_timeout }}"
      batch_size: "{{ anta_runner_batch_size }}"
      tags: "{{ anta_runner_tags | arista.avd.default([]) }}"
      dry_run: "{{ anta_runner_dry_run }}"
      logs_dir: "{{ anta_runner_logs_dir }}"
    report:
      csv_output: "{{ anta_report_csv_path }}"
      md_output: "{{ anta_report_md_path }}"
      json_output: "{{ anta_report_json_path }}"
      filters:
        hide_statuses: "{{ anta_report_hide_statuses | arista.avd.default([]) }}"
  register: anta
  delegate_to: localhost
  run_once: true
  check_mode: false
