# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
---
# tasks file for build_directories

- name: "Cleanup existing folders in {{ output_dir }}"
  ansible.builtin.file:
    path: "{{ output_dir }}"
    state: absent
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ output_dir }}"
  ansible.builtin.file:
    path: "{{ output_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ structured_dir_name }} for structured YAML files"
  ansible.builtin.file:
    path: "{{ structured_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ eos_config_dir_name }} for EOS Configuration files"
  ansible.builtin.file:
    path: "{{ eos_config_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ structured_cvp_dir_name }} for CVP structured YAML files"
  ansible.builtin.file:
    path: "{{ structured_cvp_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create documentation folder: {{ documentation_dir_name }}"
  ansible.builtin.file:
    path: "{{ documentation_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ fabric_dir_name }} for Fabric documentation"
  ansible.builtin.file:
    path: "{{ fabric_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ devices_dir_name }} for EOS documentation"
  ansible.builtin.file:
    path: "{{ devices_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ post_running_config_backup_dir }} for EOS post backup dir"
  ansible.builtin.file:
    path: "{{ post_running_config_backup_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ pre_running_config_backup_dir }} for EOS pre backup dir"
  ansible.builtin.file:
    path: "{{ pre_running_config_backup_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ eos_validate_state_name }} for EOS state report dir"
  ansible.builtin.file:
    path: "{{ eos_validate_state_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ custom_anta_catalogs_dir_name }} for input custom ANTA catalogs"
  ansible.builtin.file:
    path: "{{ custom_anta_catalogs_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: Create output directory for each EOS device
  ansible.builtin.file:
    path: "{{ snapshots_backup_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

# anta_runner directories

- name: "Cleanup existing folders in {{ anta_dir_name }}, preserving {{ user_catalogs_dir_name }}"
  ansible.builtin.find:
    paths: "{{ anta_dir }}"
    file_type: directory
    excludes: "{{ user_catalogs_dir_name }}"
  register: dirs_to_clean
  delegate_to: localhost
  run_once: true

- name: "Remove found directories in {{ anta_dir_name }}"
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ dirs_to_clean.files }}"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ anta_dir_name }} for ANTA"
  ansible.builtin.file:
    path: "{{ anta_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ user_catalogs_dir_name }} for ANTA user-defined catalogs"
  ansible.builtin.file:
    path: "{{ user_catalogs_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ avd_catalogs_dir_name }} for ANTA AVD generated catalogs"
  ansible.builtin.file:
    path: "{{ avd_catalogs_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ anta_reports_dir_name }} for ANTA reports"
  ansible.builtin.file:
    path: "{{ anta_reports_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true

- name: "Create folder {{ anta_runner_logs_dir_name }} for ANTA logs"
  ansible.builtin.file:
    path: "{{ anta_runner_logs_dir }}"
    state: directory
    mode: "0o775"
  delegate_to: localhost
  run_once: true
