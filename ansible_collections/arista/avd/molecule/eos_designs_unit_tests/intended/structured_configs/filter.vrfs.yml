aaa_root:
  disabled: true
config_end: true
enable_password:
  disabled: true
hostname: filter.vrfs
ip_igmp_snooping:
  globally_enabled: true
ip_routing: true
loopback_interfaces:
- name: Loopback0
  description: ROUTER_ID
  shutdown: false
  ip_address: 10.0.0.1/32
- name: Loopback2
  shutdown: false
  vrf: VRF2
  ip_address: 192.168.1.1/32
management_api_http:
  enable_https: true
  enable_vrfs:
  - name: MGMT
metadata:
  is_deployed: true
  fabric_name: EOS_DESIGNS_UNIT_TESTS
prefix_lists:
- name: PL-LOOPBACKS-EVPN-OVERLAY
  sequence_numbers:
  - sequence: 10
    action: permit 10.0.0.0/24 eq 32
route_maps:
- name: RM-CONN-2-BGP
  sequence_numbers:
  - sequence: 10
    type: permit
    match:
    - ip address prefix-list PL-LOOPBACKS-EVPN-OVERLAY
router_bfd:
  multihop:
    interval: 300
    min_rx: 300
    multiplier: 3
router_bgp:
  as: '65001'
  router_id: 10.0.0.1
  maximum_paths:
    paths: 4
    ecmp: 4
  updates:
    wait_install: true
  bgp:
    default:
      ipv4_unicast: false
  peer_groups:
  - name: IPv4-UNDERLAY-PEERS
    type: ipv4
    send_community: all
    maximum_routes: 12000
  - name: EVPN-OVERLAY-PEERS
    type: evpn
    update_source: Loopback0
    bfd: true
    ebgp_multihop: 3
    send_community: all
    maximum_routes: 0
  redistribute:
    connected:
      enabled: true
      route_map: RM-CONN-2-BGP
  address_family_evpn:
    peer_groups:
    - name: EVPN-OVERLAY-PEERS
      activate: true
  address_family_ipv4:
    peer_groups:
    - name: IPv4-UNDERLAY-PEERS
      activate: true
    - name: EVPN-OVERLAY-PEERS
      activate: false
service_routing_protocols_model: multi-agent
transceiver_qsfp_default_mode_4x10: true
vlan_internal_order:
  allocation: ascending
  range:
    beginning: 1006
    ending: 1199
vrfs:
- name: MGMT
  ip_routing: false
- name: VRF2
  description: This VRF is attracted by Loopback and will be configured because it is permitted by filter.allow_vrfs
  ip_routing: true
  tenant: TENANT1
- name: VRF5
  description: This VRF will be configured because of always_include_vrfs_in_tenants and it is permitted by filter.allow_vrfs
  ip_routing: true
  tenant: TENANT2
