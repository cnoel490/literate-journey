---
- name: "{{ test_id | upper }} Converge - cv_run_change_control = false"
  hosts: SITE1_FABRIC
  connection: local
  gather_facts: false
  vars:
    cv_server: "{{ lookup('env', 'CV_SERVER') }}"
    cv_token: "{{ lookup('env', 'CV_ACCESS_TOKEN') }}"
    proxy_host: "{{ lookup('env', 'CV_PROXY_HOST') | default('', true) }}"
    proxy_port: "{{ lookup('env', 'CV_PROXY_PORT') | default(3128, true) | int }}"
    proxy_username: "{{ lookup('env', 'CV_PROXY_USERNAME') | default('', true) }}"
    proxy_password: "{{ lookup('env', 'CV_PROXY_PASSWORD') | default('', true) }}"
    cv_verify_certs: "{{ lookup('env', 'CV_VERIFY_CERTS') | default(true, true) | bool }}"
    cv_skip_missing_devices: true
    eos_config_dir: "{{ playbook_dir }}/intended/configs/test_configs"
    structured_dir: "{{ playbook_dir }}/intended/structured_configs/test_configs"
    intended_tag_device: avd-ci-leaf1
    intended_tags: "{{ lookup('file', structured_dir ~ '/' ~ intended_tag_device ~ '.yml')| from_yaml }}"
    test_id: "force-ws-true_run-cc-false"
    cv_common_pattern: "avd_cv-deploy_{{ test_id }}"

  tasks:
    - name: "{{ test_id | upper }} Banner"
      tags: ["{{ test_id }}"]
      run_once: true
      ansible.builtin.debug:
        msg:
          - "{{ ('#' * (31 + test_id | length))[:100] }}"
          - "### STARTING MOLECULE TEST {{ test_id[:69] | upper }} ###"
          - "{{ ('#' * (31 + test_id | length))[:100] }}"

    - name: "{{ test_id | upper }} {{ 'Read' if lookup('env', 'MOLECULE_EXECUTION_ID') else 'Generate' }} molecule execution ID"
      tags: ["{{ test_id }}"]
      run_once: true
      ansible.builtin.set_fact:
        r: "{{ lookup('env', 'MOLECULE_EXECUTION_ID') or lookup('password', '/dev/null chars=ascii_lowercase,digits length=4') }}"

    - name: "{{ test_id | upper }} Code block to provision CVP with AVD configuration"
      tags: ["{{ test_id }}"]
      run_once: true
      delegate_to: localhost

      block:

        - name: "(BLOCK) {{ test_id | upper }} Banner"
          tags: ["{{ test_id }}"]
          run_once: true
          ansible.builtin.debug:
            msg:
              - "### ENGAGE CV_DEPLOY ROLE TO PUSH CONFIGURATION FOR {{ test_id[:69] | upper }} ###"

        - name: "(BLOCK) {{ test_id | upper }} Provision with cv_run_change_control = false"
          tags: ["{{ test_id }}"]
          run_once: true
          delegate_to: localhost
          ansible.builtin.import_role:
            name: arista.avd.cv_deploy
          vars:
            cv_workspace_name: "{{ cv_common_pattern }}_{{ r }}_converge"
            cv_workspace_description: "{{ (cv_common_pattern + '_' + r + '_converge') | upper }}"
            cv_change_control_name: "{{ cv_common_pattern }}_{{ r }}_converge"
            cv_change_control_description: "{{ (cv_common_pattern + '_' + r + '_converge') | upper }}"
            cv_register_detailed_results: true
            cv_submit_workspace_force: true

        - name: "(BLOCK) {{ test_id | upper }} Check CVP returns"
          tags: ["{{ test_id }}"]
          run_once: true
          ansible.builtin.assert:
            that:
              # Change control
              - cv_deploy_results.change_control.requested_state == "pending approval"
              - cv_deploy_results.change_control.requested_state == cv_deploy_results.change_control.state

      always:

        - name: "(ALWAYS) {{ test_id | upper }} Display CVP detailed result"
          tags: ["{{ test_id }}"]
          run_once: true
          ansible.builtin.debug:
            var: cv_deploy_results

        - name: "(ALWAYS) {{ test_id | upper }} Cleanup orphan CC"
          tags: ["{{ test_id }}"]
          run_once: true
          ansible.legacy.uri:
            url: https://{{ cv_server }}/api/resources/changecontrol/v1/ChangeControlConfig?key.id={{ cv_deploy_results.change_control.id }}
            use_proxy: "{{ true if proxy_host and proxy_port else false }}"
            validate_certs: "{{ cv_verify_certs }}"
            return_content: true
            headers:
              Accept: "application/json"
              Content-Type: "application/json"
              Authorization: "Bearer {{ lookup('env', 'CV_ACCESS_TOKEN') }}"
            method: DELETE
            body_format: json
            force_basic_auth: true
            timeout: 10
          register: cvp_abandon_cc_result
          until: cvp_abandon_cc_result.status == 200
          retries: 3
          delay: 3
          ignore_errors: true
          when: cv_deploy_results.change_control.state | lower in ['pending approval', 'approved']
          # Set HTTPS_PROXY environment variable scoped for this task only
          environment:
            https_proxy: >-
              http://{{ (proxy_username and proxy_password) | ternary(proxy_username ~ ':' ~ proxy_password ~ '@', '') }}{{ proxy_host }}:{{ proxy_port }}

        - name: "(ALWAYS) {{ test_id | upper }} Banner"
          tags: ["{{ test_id }}"]
          run_once: true
          ansible.builtin.debug:
            msg:
              - "### ENGAGE CV_DEPLOY ROLE TO CLEANUP AFTER {{ test_id[:69] | upper }} ###"

        - name: "(ALWAYS) {{ test_id | upper }} Cleanup"
          tags: ["{{ test_id }}"]
          run_once: true
          delegate_to: localhost
          ansible.builtin.import_role:
            name: arista.avd.cv_deploy
          vars:
            cv_workspace_name: "{{ cv_common_pattern }}_{{ r }}_cleanup"
            cv_workspace_description: "{{ (cv_common_pattern + '_' + r + '_cleanup') | upper }}"
            cv_change_control_name: "{{ cv_common_pattern }}_{{ r }}_cleanup"
            cv_change_control_description: "{{ (cv_common_pattern + '_' + r + '_cleanup') | upper }}"
            cv_register_detailed_results: true
            cv_devices: "{{ ansible_play_hosts_all }}"
            eos_config_dir: "{{ playbook_dir }}/intended/configs/base_configs"
            structured_dir: "{{ playbook_dir }}/intended/structured_configs/base_configs"
            cv_submit_workspace_force: true
            cv_run_change_control: true
