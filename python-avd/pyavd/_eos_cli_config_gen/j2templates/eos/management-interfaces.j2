{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - management interfaces #}
{% for management_interface in management_interfaces | arista.avd.natural_sort('name') %}
!
interface {{ management_interface.name }}
{%     if management_interface.description is arista.avd.defined %}
   description {{ management_interface.description }}
{%     endif %}
{%     if management_interface.shutdown is arista.avd.defined(true) %}
   shutdown
{%     elif management_interface.shutdown is arista.avd.defined(false) %}
   no shutdown
{%     endif %}
{%     if management_interface.mtu is arista.avd.defined %}
   mtu {{ management_interface.mtu }}
{%     endif %}
{%     if management_interface.mac_address is arista.avd.defined %}
   mac-address {{ management_interface.mac_address }}
{%     endif %}
{%     if management_interface.speed is arista.avd.defined %}
   speed {{ management_interface.speed }}
{%     endif %}
{%     if management_interface.vrf is arista.avd.defined and management_interface.vrf != 'default' %}
   vrf {{ management_interface.vrf }}
{%     endif %}
{%     if management_interface.ip_address is arista.avd.defined %}
   ip address {{ management_interface.ip_address }}
{%     endif %}
{%     if management_interface.ipv6_enable is arista.avd.defined(true) %}
   ipv6 enable
{%     endif %}
{%     if management_interface.ipv6_address is arista.avd.defined %}
   ipv6 address {{ management_interface.ipv6_address }}
{%     endif %}
{%     if management_interface.lldp.transmit is arista.avd.defined(false) %}
   no lldp transmit
{%     endif %}
{%     if management_interface.lldp.receive is arista.avd.defined(false) %}
   no lldp receive
{%     endif %}
{%     if management_interface.lldp.ztp_vlan is arista.avd.defined %}
   lldp tlv transmit ztp vlan {{ management_interface.lldp.ztp_vlan }}
{%     endif %}
{%     if management_interface.redundancy.fallback_delay is arista.avd.defined %}
{%         set fallback_delay = "redundancy fallback-delay " ~ management_interface.redundancy.fallback_delay %}
{%         if management_interface.redundancy.fallback_delay is arista.avd.defined("infinity") %}
   {{ fallback_delay }}
{%         else %}
   {{ fallback_delay }} seconds
{%         endif %}
{%     endif %}
{%     if management_interface.redundancy.monitor.link_state is arista.avd.defined(true) %}
   redundancy monitor link-state
{%     elif management_interface.redundancy.monitor.neighbor is arista.avd.defined %}
{%         set neighbor_cli = "redundancy monitor neighbor ipv6 " ~ management_interface.redundancy.monitor.neighbor.ipv6_address %}
{%         if management_interface.redundancy.monitor.neighbor.interval is arista.avd.defined %}
{%             set neighbor_cli = neighbor_cli ~ " interval " ~ management_interface.redundancy.monitor.neighbor.interval ~ " milliseconds" %}
{%         endif %}
{%         if management_interface.redundancy.monitor.neighbor.multiplier is arista.avd.defined %}
{%             set neighbor_cli = neighbor_cli ~ " multiplier " ~ management_interface.redundancy.monitor.neighbor.multiplier %}
{%         endif %}
   {{ neighbor_cli }}
{%     endif %}
{%     if management_interface.redundancy.supervisor_1 is arista.avd.defined %}
   redundancy supervisor 1 interface primary {{ management_interface.redundancy.supervisor_1.primary_management_interface }} backup {{ " ".join(management_interface.redundancy.supervisor_1.backup_management_interfaces) }}
{%     endif %}
{%     if management_interface.redundancy.supervisor_2 is arista.avd.defined %}
   redundancy supervisor 2 interface primary {{ management_interface.redundancy.supervisor_2.primary_management_interface }} backup {{ " ".join(management_interface.redundancy.supervisor_2.backup_management_interfaces) }}
{%     endif %}
{%     if management_interface.eos_cli is arista.avd.defined %}
   {{ management_interface.eos_cli | indent(3, false) }}
{%     endif %}
{% endfor %}
