{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - ntp #}
{% if ntp is arista.avd.defined %}
!
{%     for authentication_key in ntp.authentication_keys | arista.avd.natural_sort('id') %}
{%         set ntp_auth_key_cli = "ntp authentication-key " ~ authentication_key.id ~ " " ~ authentication_key.hash_algorithm %}
{%         if authentication_key.key_type is arista.avd.defined %}
{%             set ntp_auth_key_cli = ntp_auth_key_cli ~ " " ~ authentication_key.key_type %}
{%         endif %}
{%         set ntp_auth_key_cli = ntp_auth_key_cli ~ " " ~ authentication_key.key | arista.avd.hide_passwords(hide_passwords) %}
{{ ntp_auth_key_cli }}
{%     endfor %}
{%     if ntp.trusted_keys is arista.avd.defined %}
ntp trusted-key {{ ntp.trusted_keys }}
{%     endif %}
{%     if ntp.authenticate_servers_only is arista.avd.defined(true) %}
ntp authenticate servers
{%     elif ntp.authenticate is arista.avd.defined(true) %}
ntp authenticate
{%     endif %}
{%     if ntp.local_interface.name is arista.avd.defined %}
{%         set ntp_int_cli = "ntp local-interface" %}
{%         if ntp.local_interface.vrf is arista.avd.defined and ntp.local_interface.vrf != 'default' %}
{%             set ntp_int_cli = ntp_int_cli ~ " vrf " ~ ntp.local_interface.vrf %}
{%         endif %}
{%         set ntp_int_cli = ntp_int_cli ~ " " ~ ntp.local_interface.name %}
{{ ntp_int_cli }}
{%     endif %}
{%     set ntp_vrf = "" %}
{%     if ntp.vrf is arista.avd.defined and ntp.vrf != "default" %}
{%         set ntp_vrf = ntp.vrf %}
{%     endif %}
{%     for server in ntp.servers | arista.avd.natural_sort('name') %}
{%         set ntp_server_cli = "ntp server" %}
{%         if ntp_vrf %}
{%             set ntp_server_cli = ntp_server_cli ~ " vrf " ~ ntp_vrf %}
{%         endif %}
{%         set ntp_server_cli = ntp_server_cli ~ " " ~ server.name %}
{%         if server.preferred is arista.avd.defined(true) %}
{%             set ntp_server_cli = ntp_server_cli ~ " prefer" %}
{%         endif %}
{%         if server.burst is arista.avd.defined(true) %}
{%             set ntp_server_cli = ntp_server_cli ~ " burst" %}
{%         endif %}
{%         if server.iburst is arista.avd.defined(true) %}
{%             set ntp_server_cli = ntp_server_cli ~ " iburst" %}
{%         endif %}
{%         if server.version is arista.avd.defined %}
{%             set ntp_server_cli = ntp_server_cli ~ " version " ~ server.version %}
{%         endif %}
{%         if server.minpoll is arista.avd.defined %}
{%             set ntp_server_cli = ntp_server_cli ~ " minpoll " ~ server.minpoll %}
{%         endif %}
{%         if server.maxpoll is arista.avd.defined %}
{%             set ntp_server_cli = ntp_server_cli ~ " maxpoll " ~ server.maxpoll %}
{%         endif %}
{%         if server.local_interface is arista.avd.defined %}
{%             set ntp_server_cli = ntp_server_cli ~ " local-interface " ~ server.local_interface %}
{%         endif %}
{%         if server.key is arista.avd.defined %}
{%             set ntp_server_cli = ntp_server_cli ~ " key " ~ server.key | arista.avd.hide_passwords(hide_passwords) %}
{%         endif %}
{{ ntp_server_cli }}
{%     endfor %}
{%     if ntp.serve is arista.avd.defined %}
{%         if ntp.serve.serve_all is arista.avd.defined(true) %}
ntp serve all
{%         endif %}
{%         for vrf in ntp.serve.vrfs | arista.avd.natural_sort(sort_key='name', ignore_case=false) %}
{%             if vrf.serve_all is arista.avd.defined(true) %}
ntp serve all vrf {{ vrf.name }}
{%             endif %}
{%         endfor %}
{%         for vrf in ntp.serve.vrfs | arista.avd.natural_sort(sort_key='name', ignore_case=false) %}
{%             if vrf.access_group is arista.avd.defined %}
ntp serve ip access-group {{ vrf.access_group }} vrf {{ vrf.name }} in
{%             endif %}
{%         endfor %}
{%         if ntp.serve.access_group is arista.avd.defined %}
ntp serve ip access-group {{ ntp.serve.access_group }} in
{%         endif %}
{%         for vrf in ntp.serve.vrfs | arista.avd.natural_sort(sort_key='name', ignore_case=false) %}
{%             if vrf.ipv6_access_group is arista.avd.defined %}
ntp serve ipv6 access-group {{ vrf.ipv6_access_group }} vrf {{ vrf.name }} in
{%             endif %}
{%         endfor %}
{%         if ntp.serve.ipv6_access_group is arista.avd.defined %}
ntp serve ipv6 access-group {{ ntp.serve.ipv6_access_group }} in
{%         endif %}
{%     endif %}
{% endif %}
