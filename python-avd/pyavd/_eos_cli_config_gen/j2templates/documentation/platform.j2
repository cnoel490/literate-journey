{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# doc - platform #}
{% if platform is arista.avd.defined %}

## Platform
{%     if platform.trident is arista.avd.defined or platform.sand is arista.avd.defined or platform.sfe is arista.avd.defined or platform.fap is arista.avd.defined %}

### Platform Summary
{%         if platform.trident is arista.avd.defined %}

#### Platform Trident Summary

| Settings | Value |
| -------- | ----- |
{%             if platform.trident.l3.routing_mac_address_per_vlan is arista.avd.defined(true) %}
| Routing MAC Address per VLAN | true |
{%             endif %}
{%             if platform.trident.forwarding_table_partition is arista.avd.defined %}
| Forwarding Table Partition | {{ platform.trident.forwarding_table_partition }} |
{%             endif %}
{%             if platform.trident.mmu.active_profile is arista.avd.defined %}
| MMU Applied Profile | {{ platform.trident.mmu.active_profile }} |
{%             endif %}
{%             if platform.trident.mmu.headroom_pool.limit is arista.avd.defined %}
| MMU Headroom-pool Limit | {{ platform.trident.mmu.headroom_pool.limit }} {{ platform.trident.mmu.headroom_pool.unit | arista.avd.default("bytes") }} |
{%             endif %}
{%             if platform.trident.mmu.queue_profiles is arista.avd.defined %}

#### Trident MMU QUEUE PROFILES
{%                 for profile in platform.trident.mmu.queue_profiles | arista.avd.natural_sort('name') %}

##### {{ profile.name }}
{%                     if profile.ingress.headroom.memory is arista.avd.defined or profile.ingress.threshold is arista.avd.defined or profile.ingress.resume is arista.avd.defined or profile.ingress.reserved.memory is arista.avd.defined %}

###### Ingress

| Settings | Value |
| -------- | ----- |
{%                         if profile.ingress.headroom.memory is arista.avd.defined %}
| Headroom | {{ profile.ingress.headroom.memory }} {{ profile.ingress.headroom.unit | arista.avd.default('bytes') }} |
{%                         endif %}
| Threshold | {{ profile.ingress.threshold | arista.avd.default('-') }} |
| Resume | {{ profile.ingress.resume | arista.avd.default('-') }} |
{%                         if profile.ingress.reserved.memory is arista.avd.defined %}
| Reserved | {{ profile.ingress.reserved.memory }} {{ profile.ingress.reserved.unit | arista.avd.default('bytes') }} |
{%                         endif %}
{%                     endif %}
{%                     if profile.ingress.priority_groups is arista.avd.defined %}

###### Ingress Priority Groups

| Group Number | Threshold | Reserved |
| ------------ | --------- | -------- |
{%                         for priority_group in profile.ingress.priority_groups | arista.avd.natural_sort('id') %}
{%                             if priority_group.reserved.memory is arista.avd.defined %}
{%                                 set reserved = priority_group.reserved.memory ~ ' ' ~ (priority_group.reserved.unit | arista.avd.default('bytes')) %}
{%                             else %}
{%                                 set reserved = '-' %}
{%                             endif %}
| {{ priority_group.id }} | {{ priority_group.threshold | arista.avd.default('-') }} | {{ reserved }} |
{%                         endfor %}
{%                     endif %}
{%                     if profile.unicast_queues is arista.avd.defined or profile.multicast_queues is arista.avd.defined %}

###### Egress

| Type | Egress Queue | Threshold | Reserved | Drop-Precedence |
| ---- | ------------ | --------- | -------- | --------------- |
{%                         for queue in profile.unicast_queues | arista.avd.natural_sort('id') %}
| Unicast | {{ queue.id }} | {{ queue.threshold | arista.avd.default('-') }} | {{ queue.reserved | arista.avd.default('-') }} {{ queue.unit | arista.avd.default('bytes') }} | {{ queue.drop_precedence | arista.avd.default('-') }} |
{%                         endfor %}
{%                         for queue in profile.multicast_queues | arista.avd.natural_sort('id') %}
| Multicast | {{ queue.id }} | {{ queue.threshold | arista.avd.default('-') }} | {{ queue.reserved | arista.avd.default('-') }} {{ queue.unit | arista.avd.default('bytes') }} | {{ queue.drop_precedence | arista.avd.default('-') }} |
{%                         endfor %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endif %}
{%         if platform.sand is arista.avd.defined %}

#### Platform Sand Summary

| Settings | Value |
| -------- | ----- |
{%             if platform.sand.forwarding_mode is arista.avd.defined %}
| Forwarding Mode | {{ platform.sand.forwarding_mode }} |
{%             endif %}
{%             if platform.sand.lag.hardware_only is arista.avd.defined %}
| Hardware Only Lag | {{ platform.sand.lag.hardware_only }} |
{%             endif %}
{%             if platform.sand.lag.mode is arista.avd.defined %}
| Lag Mode | {{ platform.sand.lag.mode }} |
{%             endif %}
{%             if platform.sand.multicast_replication.default is arista.avd.defined %}
| Default Multicast Replication | {{ platform.sand.multicast_replication.default }} |
{%             endif %}
{%             if platform.sand.qos_maps is arista.avd.defined %}

##### Internal Network QOS Mapping

| Traffic Class | To Network QOS |
| ------------- | -------------- |
{%                 for qos_map in platform.sand.qos_maps | arista.avd.natural_sort('traffic_class') %}
{%                     if qos_map.traffic_class is arista.avd.defined and qos_map.to_network_qos is arista.avd.defined %}
| {{ qos_map.traffic_class }} | {{ qos_map.to_network_qos }} |
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endif %}
{%         if platform.sfe is arista.avd.defined %}

#### Platform Software Forwarding Engine Summary

| Settings | Value |
| -------- | ----- |
{%             if platform.sfe.data_plane_cpu_allocation_max is arista.avd.defined %}
| Maximum CPU Allocation | {{ platform.sfe.data_plane_cpu_allocation_max }} |
{%             endif %}
{## Platform Sfe Interface #}
{%             if platform.sfe.interface is arista.avd.defined %}
{%                 if platform.sfe.interface.interface_profile is arista.avd.defined %}
| Interface profile | {{ platform.sfe.interface.interface_profile }} |
{%                 endif %}
{%                 if platform.sfe.interface.profiles is arista.avd.defined %}

#### Platform Software Forwarding Engine Interface Profiles
{%                     for profile_data in platform.sfe.interface.profiles | arista.avd.natural_sort('name') %}

##### {{ profile_data.name }}
{%                         if profile_data.interfaces is arista.avd.defined %}

| Interface | Rx-Queue Count | Rx-Queue Worker | Rx-Queue Mode |
| --------- | -------------- | --------------- | ------------- |
{%                             for interface_data in profile_data.interfaces | arista.avd.natural_sort('name') %}
{%                                 set rx_queue_count = interface_data.rx_queue.count | arista.avd.default('-') %}
{%                                 set rx_queue_worker = interface_data.rx_queue.worker | arista.avd.default('-') %}
{%                                 set rx_queue_mode = interface_data.rx_queue.mode | arista.avd.default('-') %}
| {{ interface_data.name }} | {{ rx_queue_count }} | {{ rx_queue_worker }} | {{ rx_queue_mode }} |
{%                             endfor %}
{%                         endif %}
{%                     endfor %}
{%                 endif %}
{%             endif %}
{%         endif %}
{%         if platform.fap is arista.avd.defined %}

#### Platform FAP Summary

| Settings | Value |
| -------- | ----- |
{%             if platform.fap.buffering_egress.profile is arista.avd.defined %}
| Buffering Egress Profile | {{ platform.fap.buffering_egress.profile }} |
{%             endif %}
{%         endif %}
{%     endif %}

### Platform Device Configuration

```eos
{%     include 'eos/platform.j2' %}
{%     include 'eos/platform-sfe-interface.j2' %}
{%     include 'eos/platform-headroom-pool.j2' %}
```
{% endif %}
