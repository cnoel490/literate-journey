{#
 Copyright (c) 2023-2025 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# doc - dot1x #}
{% set ethernet_interfaces_dot1x = [] %}
{% for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%     if ethernet_interface.dot1x is arista.avd.defined %}
{%         do ethernet_interfaces_dot1x.append(ethernet_interface) %}
{%     endif %}
{% endfor %}
{% if (dot1x is arista.avd.defined) or (ethernet_interfaces_dot1x | length > 0) %}

## 802.1X Port Security

### 802.1X Summary
{%     if dot1x is arista.avd.defined %}

#### 802.1X Global

| System Auth Control | Protocol LLDP Bypass | Dynamic Authorization | Dropped Packets Statistics |
| ------------------- | -------------------- | ----------------------| -------------------------- |
{%         set system_auth_control = dot1x.system_auth_control | arista.avd.default('-') %}
{%         set protocol_lldp_bypass = dot1x.protocol_lldp_bypass | arista.avd.default('-') %}
{%         set dynamic_authorization = dot1x.dynamic_authorization | arista.avd.default('-') %}
{%         set statistics_packets_dropped = dot1x.statistics_packets_dropped | arista.avd.default('-') %}
| {{ system_auth_control }} | {{ protocol_lldp_bypass }} | {{ dynamic_authorization }} | {{ statistics_packets_dropped }} |
{%         if dot1x.mac_based_authentication is arista.avd.defined %}

#### 802.1X MAC based authentication

| Delay | Hold period |
| ----- | ----------- |
{%             set delay = dot1x.mac_based_authentication.delay | arista.avd.default('-') %}
{%             set hold_period = dot1x.mac_based_authentication.hold_period | arista.avd.default('-') %}
| {{ delay }} | {{ hold_period }} |
{%         endif %}
{%         if dot1x.radius_av_pair is arista.avd.defined %}

#### 802.1X Radius AV pair

| Type | Value | Auth Only |
| ---- | ----- | --------- |
{%             if dot1x.radius_av_pair.service_type is arista.avd.defined(true) %}
| Service Type | - | - |
{%             endif %}
{%             if dot1x.radius_av_pair.framed_mtu is arista.avd.defined %}
| Framed MTU | {{ dot1x.radius_av_pair.framed_mtu }} | - |
{%             endif %}
{%             if dot1x.radius_av_pair.lldp.system_name.enabled is arista.avd.defined(true) %}
{%                 if dot1x.radius_av_pair.lldp.system_name.auth_only is arista.avd.defined(true) %}
{%                     set auth_only = "Yes" %}
{%                 endif %}
| LLDP System-name | - | {{ auth_only | arista.avd.default('No') }} |
{%             endif %}
{%             if dot1x.radius_av_pair.lldp.system_description.enabled is arista.avd.defined(true) %}
{%                 if dot1x.radius_av_pair.lldp.system_description.auth_only is arista.avd.defined(true) %}
{%                     set auth_only = "Yes" %}
{%                 endif %}
| LLDP System-description | - | {{ auth_only | arista.avd.default('No') }} |
{%             endif %}
{%             if dot1x.radius_av_pair.dhcp.hostname.enabled is arista.avd.defined(true) %}
{%                 if dot1x.radius_av_pair.lldp.hostname.auth_only is arista.avd.defined(true) %}
{%                     set auth_only = "Yes" %}
{%                 endif %}
| DHCP Hostname | - | {{ auth_only | arista.avd.default('No') }} |
{%             endif %}
{%             if dot1x.radius_av_pair.dhcp.parameter_request_list.enabled is arista.avd.defined(true) %}
{%                 if dot1x.radius_av_pair.dhcp.parameter_request_list.auth_only is arista.avd.defined(true) %}
{%                     set auth_only = "Yes" %}
{%                 endif %}
| DHCP Parameter Request List | - | {{ auth_only | arista.avd.default('No') }} |
{%             endif %}
{%             if dot1x.radius_av_pair.dhcp.vendor_class_id.enabled is arista.avd.defined(true) %}
{%                 if dot1x.radius_av_pair.dhcp.vendor_class_id.auth_only is arista.avd.defined(true) %}
{%                     set auth_only = "Yes" %}
{%                 endif %}
| DHCP Vendor Class ID | - | {{ auth_only | arista.avd.default('No') }} |
{%             endif %}
{%             if dot1x.radius_av_pair.filter_id.delimiter_period is arista.avd.defined(true) %}
| Filter ID Delimiter Period | - | - |
{%             endif %}
{%             if dot1x.radius_av_pair.filter_id.ipv4_ipv6_required is arista.avd.defined(true) %}
| Filter ID IPv4 IPv6 Required | - | - |
{%             endif %}
{%             if dot1x.radius_av_pair.filter_id.multiple is arista.avd.defined(true) %}
| Filter ID Multiple | - | - |
{%             endif %}
{%             if dot1x.radius_av_pair_username_format is arista.avd.defined %}
| Username Format | delimiter: {{ dot1x.radius_av_pair_username_format.delimiter }}</br>MAC string case: {{ dot1x.radius_av_pair_username_format.mac_string_case }} | - |
{%             endif %}
{%         endif %}
{%         if dot1x.captive_portal.enabled is arista.avd.defined(true) %}

#### 802.1X Captive-portal authentication

| Authentication Attribute | Value |
| ------------------------ | ----- |
{%             if dot1x.captive_portal.url is arista.avd.defined %}
| URL | {{ dot1x.captive_portal.url }} |
{%             endif %}
{%             if dot1x.captive_portal.ssl_profile is arista.avd.defined %}
| SSL profile | {{ dot1x.captive_portal.ssl_profile }} |
{%             endif %}
{%             if dot1x.captive_portal.access_list_ipv4 is arista.avd.defined %}
| IPv4 Access-list | {{ dot1x.captive_portal.access_list_ipv4 }} |
{%             endif %}
{%             if dot1x.captive_portal.start_limit_infinite is arista.avd.defined(true) %}
| Start limit | Infinite |
{%             endif %}
{%         endif %}
{%         if dot1x.vlan_assignment_groups is arista.avd.defined %}

#### 802.1X VLAN Assignment Groups

| VLAN Group Name | Members |
| --------------- | ------- |
{%             for vlan_assignment_group in dot1x.vlan_assignment_groups | arista.avd.natural_sort("name") %}
| {{ vlan_assignment_group.name }} | {{ vlan_assignment_group.members }} |
{%             endfor %}
{%         endif %}
{%         if dot1x.supplicant is arista.avd.defined %}

#### 802.1X Supplicant

| Attribute | Value |
| --------- | ----- |
{%             if dot1x.supplicant.logging is arista.avd.defined %}
| Logging | {{ dot1x.supplicant.logging }} |
{%             endif %}
{%             if dot1x.supplicant.disconnect_cached_results_timeout is arista.avd.defined %}
| Disconnect cached-results timeout | {{ dot1x.supplicant.disconnect_cached_results_timeout }} seconds |
{%             endif %}
{%             if dot1x.supplicant.profiles is arista.avd.defined %}

##### 802.1X Supplicant profiles

| Profile | EAP Method | Identity | SSL Profile |
| ------- | ---------- | -------- | ----------- |
{%                 for profile in dot1x.supplicant.profiles | arista.avd.natural_sort("name") %}
| {{ profile.name }} | {{ profile.eap_method | arista.avd.default("-") }} | {{ profile.identity | arista.avd.default("-") }} | {{ profile.ssl_profile | arista.avd.default("-") }} |
{%                 endfor %}
{%             endif %}
{%         endif %}
{%     endif %}
{%     if ethernet_interfaces_dot1x | length > 0 %}

#### 802.1X Interfaces

| Interface | PAE Mode | Supplicant Profile | State | Phone Force Authorized | Reauthentication | Auth Failure Action | Host Mode | Mac Based Auth | Eapol |
| --------- | -------- | ------------------ | ----- | ---------------------- | ---------------- | ------------------- | --------- | -------------- | ----- |
{%         for ethernet_interface in ethernet_interfaces_dot1x %}
{%             set pae_mode = ethernet_interface.dot1x.pae.mode | arista.avd.default('-') %}
{%             set supplicant_profile = ethernet_interface.dot1x.pae.supplicant_profile | arista.avd.default('-') %}
{%             set auth_failure_action = ethernet_interface.dot1x.authentication_failure.action | arista.avd.default('-') %}
{%             if auth_failure_action == 'allow' and
                  ethernet_interface.dot1x.authentication_failure.allow_vlan is arista.avd.defined %}
{%                 set auth_failure_action = auth_failure_action ~ " vlan " ~ ethernet_interface.dot1x.authentication_failure.allow_vlan %}
{%             endif %}
{%             set state = ethernet_interface.dot1x.port_control | arista.avd.default('-') %}
{%             set phone_state = ethernet_interface.dot1x.port_control_force_authorized_phone | arista.avd.default('-') %}
{%             set reauthentication = ethernet_interface.dot1x.reauthentication | arista.avd.default('-') %}
{%             set host_mode = ethernet_interface.dot1x.host_mode.mode | arista.avd.default('-') %}
{%             set mac_based_authentication_enabled = ethernet_interface.dot1x.mac_based_authentication.enabled | arista.avd.default('-') %}
{%             set auth_failure_fallback_mba = ethernet_interface.dot1x.eapol.authentication_failure_fallback_mba.enabled | arista.avd.default('-') %}
| {{ ethernet_interface.name }} | {{ pae_mode }} | {{ supplicant_profile }} | {{ state }} | {{ phone_state }} | {{ reauthentication }} | {{ auth_failure_action }} | {{ host_mode }} | {{ mac_based_authentication_enabled }} | {{ auth_failure_fallback_mba }} |
{%         endfor %}
{%     endif %}
{%     if dot1x is arista.avd.defined %}

#### Dot1x Configuration

```eos
{%         include 'eos/dot1x.j2' %}
{%         include 'eos/dot1x_part2.j2' %}
```
{%     endif %}
{% endif %}
