# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../_schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  platform:
    type: dict
    description: |-
      Every key below this point is platform dependent.
    keys:
      trident:
        type: dict
        keys:
          forwarding_table_partition:
            type: str
            convert_types:
              - int
          l3:
            type: dict
            keys:
              routing_mac_address_per_vlan:
                type: bool
                description: "Enable bridging of packets with destination MAC being a Router MAC in VLANs without routing."
          mmu:
            type: dict
            description: |
              Memory Management Unit settings.
            keys:
              active_profile:
                type: str
                description: |
                  The queue profile to be applied to the platform.
              headroom_pool:
                type: dict
                keys:
                  unit:
                    type: str
                    valid_values: ["bytes", "cells"]
                    description: |-
                      Unit to be used for the `headroom_pool` value.
                      If not specified, default is bytes.
                  limit:
                    type: int
                    convert_types:
                      - str
                    description: Max limit on headroom pool size.
              queue_profiles:
                type: list
                primary_key: name
                items:
                  type: dict
                  keys:
                    name:
                      type: str
                    ingress:
                      type: dict
                      keys:
                        priority_groups:
                          type: list
                          primary_key: id
                          items:
                            type: dict
                            keys:
                              id:
                                type: int
                                convert_types:
                                  - str
                                description: Priority-group group number.
                                min: 0
                                max: 7
                              threshold:
                                type: str
                                convert_types:
                                  - int
                                valid_values:
                                  - "1"      # alpha1
                                  - "1/128"  # alphaDiv128
                                  - "1/16"   # alphaDiv16
                                  - "1/2"    # alphaDiv2
                                  - "1/32"   # alphaDiv32
                                  - "1/4"    # alphaDiv4
                                  - "1/64"   # alphaDiv64
                                  - "1/8"    # alphaDiv8
                                  - "2"      # alpha2
                                  - "4"      # alpha4
                                  - "8"      # alpha8
                              reserved:
                                type: dict
                                keys:
                                  unit:
                                    type: str
                                    valid_values: ["bytes", "cells"]
                                    description: |-
                                      Unit to be used for the `priority_groups` `reserved` value.
                                      If not specified, default is bytes.
                                  memory:
                                    type: int
                                    convert_types:
                                      - str
                                    description: Specify the amount of memory that should be reserved.
                        threshold:
                          type: str
                          convert_types:
                            - int
                          description: Specify the dynamic shared memory threshold.
                          valid_values:
                            - "1"      # alpha1
                            - "1/128"  # alphaDiv128
                            - "1/16"   # alphaDiv16
                            - "1/2"    # alphaDiv2
                            - "1/32"   # alphaDiv32
                            - "1/4"    # alphaDiv4
                            - "1/64"   # alphaDiv64
                            - "1/8"    # alphaDiv8
                            - "2"      # alpha2
                            - "4"      # alpha4
                            - "8"      # alpha8
                        reserved:
                          type: dict
                          keys:
                            unit:
                              type: str
                              valid_values: ["bytes", "cells"]
                              description: |-
                                Unit to be used for the `reserved` value.
                                If not specified, default is bytes.
                            memory:
                              type: int
                              convert_types:
                                - str
                              description: Specify the amount of memory that should be reserved.
                        headroom:
                          type: dict
                          keys:
                            unit:
                              type: str
                              valid_values: ["bytes", "cells"]
                              description: |-
                                Unit to be used for the headroom value.
                                If not specified, default is bytes.
                            memory:
                              type: int
                              convert_types:
                                - str
                              description: Specify the amount of memory that should be reserved.
                        resume:
                          type: int
                          convert_types:
                            - str
                          description: Amount of memory that should be reserved (in bytes)
                    multicast_queues:
                      type: list
                      primary_key: id
                      description: Egress multicast queues.
                      items:
                        type: dict
                        keys:
                          id:
                            type: int
                            convert_types:
                              - str
                            required: true
                            min: 0
                            max: 7
                          unit:
                            type: str
                            valid_values: ["bytes", "cells"]
                            description: |
                              Unit to be used for the reservation value. If not specified, default is bytes.
                          reserved:
                            type: int
                            convert_types: ["str"]
                            description: |
                              Amount of memory that should be reserved for this
                              queue.
                          threshold:
                            type: str
                            convert_types:
                              - "int"
                            description: |
                              Dynamic Shared Memory threshold.
                            valid_values:
                              - "1"      # alpha1
                              - "1/128"  # alphaDiv128
                              - "1/16"   # alphaDiv16
                              - "1/2"    # alphaDiv2
                              - "1/32"   # alphaDiv32
                              - "1/4"    # alphaDiv4
                              - "1/64"   # alphaDiv64
                              - "1/8"    # alphaDiv8
                              - "2"      # alpha2
                              - "4"      # alpha4
                              - "8"      # alpha8
                          drop:
                            type: dict
                            keys:
                              precedence:
                                type: int
                                valid_values: [1, 2]
                                required: true
                              threshold:
                                type: str
                                required: true
                                convert_types:
                                  - "int"
                                description: |
                                  Drop Threshold. This value may also be fractions.
                                  Example: 7/8 or 3/4 or 1/2
                    unicast_queues:
                      type: list
                      primary_key: id
                      description: Egress unicast queues.
                      items:
                        type: dict
                        keys:
                          id:
                            type: int
                            convert_types:
                              - str
                            required: true
                            min: 0
                            max: 7
                          unit:
                            type: str
                            valid_values: ["bytes", "cells"]
                            description: |
                              Unit to be used for the reservation value. If not specified, default is bytes.
                          reserved:
                            type: int
                            convert_types: ["str"]
                            description: |
                              Amount of memory that should be reserved for this
                              queue.
                          threshold:
                            type: str
                            convert_types:
                              - "int"
                            description: |
                              Dynamic Shared Memory threshold.
                            valid_values:
                              - "1"      # alpha1
                              - "1/128"  # alphaDiv128
                              - "1/16"   # alphaDiv16
                              - "1/2"    # alphaDiv2
                              - "1/32"   # alphaDiv32
                              - "1/4"    # alphaDiv4
                              - "1/64"   # alphaDiv64
                              - "1/8"    # alphaDiv8
                              - "2"      # alpha2
                              - "4"      # alpha4
                              - "8"      # alpha8
                          drop:
                            type: dict
                            keys:
                              precedence:
                                type: int
                                valid_values: [1, 2]
                                required: true
                              threshold:
                                type: str
                                required: true
                                convert_types:
                                  - "int"
                                description: |
                                  Drop Threshold. This value may also be fractions.
                                  Example: 7/8 or 3/4 or 1/2
      sand:
        type: dict
        description: Most of the platform sand options are hardware dependent and optional.
        keys:
          qos_maps:
            type: list
            items:
              type: dict
              keys:
                traffic_class:
                  type: int
                  min: 0
                  max: 7
                  convert_types:
                    - "str"
                to_network_qos:
                  type: int
                  min: 0
                  max: 63
                  convert_types:
                    - "str"
          lag:
            type: dict
            keys:
              hardware_only:
                type: bool
              mode:
                type: str
          forwarding_mode:
            type: str
          multicast_replication:
            type: dict
            keys:
              default:
                type: str
                valid_values: ["ingress", "egress"]
          mdb_profile:
            type: str
            description: "Sand platforms MDB Profile configuration. Note: l3-xxxl does not support MLAG."
            valid_values: [ "balanced", "balanced-xl", "l3", "l3-xl", "l3-xxl", "l3-xxxl" ]
      sfe:
        type: dict
        description: Sfe (Software Forwarding Engine) settings.
        keys:
          data_plane_cpu_allocation_max:
            type: int
            description: Maximum number of CPUs used for data plane traffic forwarding.
            convert_types:
              - str
            min: 1
            max: 128
          interface:
            type: dict
            description: Configure interface related settings for Sfe platform.
            keys:
              profiles:
                type: list
                primary_key: name
                description: |-
                  Configure one or more Receive Side Scaling (RSS) interface profiles.
                  This is supported on specific platforms.
                items:
                  type: dict
                  keys:
                    name:
                      type: str
                      description: RSS interface profile name.
                    interfaces:
                      type: list
                      description: Interfaces within RSS profile.
                      primary_key: name
                      items:
                        type: dict
                        keys:
                          name:
                            type: str
                            description: Interface name such as 'Ethernet2'.
                            # pattern: "Ethernet[\\d/]+"
                          rx_queue:
                            type: dict
                            description: Receive queue parameters for the selected interface.
                            keys:
                              count:
                                type: int
                                min: 1
                                convert_types:
                                  - str
                                description: |-
                                  Number of receive queues.
                                  The maximum value is platform dependent.
                              worker:
                                type: str
                                description: |-
                                  Worker ids specified as combination of range and/or comma separated values
                                  such as 0-4,7.
                              mode:
                                type: str
                                description: Mode applicable to the workers. Default mode is 'shared'.
                                valid_values:
                                  - shared
                                  - exclusive
              interface_profile:
                type: str
                description: |-
                  RSS interface profile name to apply for the platform.
                  Needs system reload or Sfe agent restart for change to take effect.
      fap:
        type: dict
        keys:
          buffering_egress:
            type: dict
            keys:
              profile:
                description: Preferred traffic profile for egress fap buffering.
                type: str
                valid_values:
                  - unicast
                  - balanced
          voq:
            type: dict
            keys:
              credit_rates_unified:
                type: bool
                description: Set Unified credit rates for all port speeds.
