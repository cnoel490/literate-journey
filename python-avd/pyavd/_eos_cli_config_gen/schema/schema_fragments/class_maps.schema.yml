# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../_schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  class_maps:
    type: dict
    display_name: QOS Class-maps
    keys:
      pbr:
        type: list
        primary_key: name
        items:
          type: dict
          keys:
            name:
              type: str
              description: Class-Map Name.
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  description: Standard Access-List Name.
                  convert_types: [ int ]
      qos:
        type: list
        primary_key: name
        description: |-
          The keys `vlan`, `cos`, `ip`, `ipv6`, `dscp`, `ecn` are mutually exclusive,
          except `dscp` and `ecn` which can be given separate or together.
        items:
          type: dict
          keys:
            name:
              type: str
              description: Class-Map Name.
            vlan:
              type: str
              convert_types:
                - int
              description: VLAN value(s) or range(s) of VLAN values.
            cos:
              type: str
              convert_types:
                - int
              description: CoS value(s) or range(s) of CoS values.
            ip:
              type: dict
              keys:
                access_group:
                  type: str
                  description: IPv4 Access-List Name.
                  convert_types: [ int ]
            ipv6:
              type: dict
              keys:
                access_group:
                  type: str
                  description: IPv6 Access-List Name.
                  convert_types: [ int ]
            dscp:
              type: str
              description: |-
                Match packets based on the DSCP value(s).
                Accepted formats:
                  - Single AF/CS/EF DSCP name like "af12".
                  - Single decimal DSCP value. Example: "23".
                  - Range of decimal DSCP values. Examples: "1,3-10".
            ecn:
              type: str
              valid_values: ["ce", "ect", "ect-ce", "non-ect"]
              description: |-
                Match packets based on the ECN value.
                Accepted values:
                  - non-ect (matches 00).
                  - ect (matches 01 an 10).
                  - ce (matches 11).
                  - ect-ce (matches 01, 10 and 11).
