# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../_schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
keys:
  snmp_settings:
    documentation_options:
      table: management-snmp-settings
    type: dict
    description: |-
      SNMP settings.
      Configuration of remote SNMP engine IDs are currently only possible using `structured_config`.
    keys:
      contact:
        type: str
        description: SNMP contact.
      location:
        type: bool
        default: false
        description: Set SNMP location. Formatted as "<fabric_name> <dc_name> <pod_name> <switch_rack> <inventory_hostname>".
      vrfs:
        type: list
        primary_key: name
        items:
          type: dict
          keys:
            name:
              type: str
              description: |-
                VRF name.
                The value will be interpreted according to these rules:
                - `use_mgmt_interface_vrf` will configure the SNMP ACL under the VRF set with `mgmt_interface_vrf`.
                  An error will be raised if `mgmt_ip` or `ipv6_mgmt_ip` are not configured for the device.
                - `use_inband_mgmt_vrf` will configure the SNMP ACL under the VRF set with `inband_mgmt_vrf`.
                  An error will be raised if inband management is not configured for the device.
                - `use_default_mgmt_method_vrf` will configure the SNMP ACL under the VRF for one of the two options above depending on the value of `default_mgmt_method`.
                - Any other string will be used directly as the VRF name.
              convert_types:
                - int
            enable:
              type: bool
              description: |-
                Enable/disable SNMP for this VRF.
            source_interface:
              type: str
              description: |-
                Source interface to use for SNMP hosts in this VRF.
                If not set, the source interface may be set automatically when VRF is set to `use_mgmt_interface_vrf`, `use_inband_mgmt_vrf` or `use_default_mgmt_method_vrf`.
                If set for the VRFs defined by `mgmt_interface_vrf` or `inband_mgmt_vrf`, this setting will take precedence.
            ipv4_acl:
              type: str
              description: IPv4 access-list name.
              convert_types:
                - int
            ipv6_acl:
              type: str
              description: IPv6 access-list name.
              convert_types:
                - int
      compute_local_engineid:
        type: bool
        default: false
        description: |
          Generate a local engineId for SNMP using the 'compute_local_engineid_source' method.
      compute_local_engineid_source:
        type: str
        default: hostname_and_ip
        description: |
          `compute_local_engineid_source` supports:
          - `hostname_and_ip` generate a local engineId for SNMP by hashing via SHA1
            the string generated via the concatenation of the hostname plus the management IP.
            {{ inventory_hostname }} + {{ switch.mgmt_ip }}.
          - `system_mac` generate the switch default engine id for AVD usage.
            To use this, `system_mac_address` MUST be set for the device.
            The formula is f5717f + system_mac_address + 00.
        valid_values:
          - hostname_and_ip
          - system_mac
      compute_v3_user_localized_key:
        type: bool
        default: false
        description: |
          Requires compute_local_engineid to be `true`.
          If enabled, the SNMPv3 passphrases for auth and priv are transformed using RFC 2574, matching the value they would take in EOS CLI.
          The algorithm requires a local engineId, which is unknown to AVD, hence the necessity to generate one beforehand.
      users:
        type: list
        description: |-
          Configuration of local SNMP users.
          Configuration of remote SNMP users are currently only possible using `structured_config`.
        items:
          type: dict
          keys:
            name:
              type: str
              description: Username.
            group:
              type: str
              description: Group name.
            version:
              type: str
              valid_values: ["v1", "v2c", "v3"]
            auth:
              type: str
              valid_values: ["md5", "sha", "sha256", "sha384", "sha512"]
            auth_passphrase:
              type: str
              description: Cleartext passphrase so the recommendation is to use vault. Requires 'auth' to be set.
            priv:
              type: str
              valid_values: ["des", "aes", "aes192", "aes256"]
            priv_passphrase:
              type: str
              description: Cleartext passphrase so the recommendation is to use vault. Requires 'priv' to be set.
      hosts:
        type: list
        $ref: "eos_cli_config_gen#/keys/snmp_server/keys/hosts"
        items:
          type: dict
          keys:
            host:
              type: str
            vrf:
              type: str
              description: |-
                VRF Name.
                The value of `vrf` will be interpreted according to these rules:
                - `use_mgmt_interface_vrf` will configure the SNMP host under the VRF set with `mgmt_interface_vrf` and set the `mgmt_interface` as SNMP source-interface.
                  An error will be raised if `mgmt_ip` or `ipv6_mgmt_ip` are not configured for the device.
                - `use_inband_mgmt_vrf` will configure the SNMP host under the VRF set with `inband_mgmt_vrf` and set the `inband_mgmt_interface` as SNMP source-interface.
                  An error will be raised if inband management is not configured for the device.
                - `use_default_mgmt_method_vrf` will configure the SNMP host under the VRF and set the source-interface for one of the two options above depending on the value of `default_mgmt_method`.
                - Any other string will be used directly as the VRF name. Remember to set the `snmp_settings.vrfs[].source_interface` if needed.
              convert_types:
                - int
            use_mgmt_interface_vrf:
              type: bool
              deprecation:
                warning: true
                removed: true
                remove_in_version: 6.0.0
                new_key: |-
                  vrf: "use_mgmt_interface_vrf"
            use_inband_mgmt_vrf:
              type: bool
              deprecation:
                warning: true
                removed: true
                remove_in_version: 6.0.0
                new_key: |-
                  vrf: "use_inband_mgmt_vrf"
      communities:
        type: list
        $ref: "eos_cli_config_gen#/keys/snmp_server/keys/communities"
      views:
        type: list
        $ref: "eos_cli_config_gen#/keys/snmp_server/keys/views"
      groups:
        type: list
        $ref: "eos_cli_config_gen#/keys/snmp_server/keys/groups"
      traps:
        type: dict
        $ref: "eos_cli_config_gen#/keys/snmp_server/keys/traps"
      enable_mgmt_interface_vrf:
        type: bool
        deprecation:
          warning: true
          removed: true
          remove_in_version: 6.0.0
          new_key: vrfs[name="use_mgmt_interface_vrf"].enabled
      enable_inband_mgmt_vrf:
        type: bool
        deprecation:
          warning: true
          removed: true
          remove_in_version: 6.0.0
          new_key: vrfs[name="use_inband_mgmt_vrf"].enabled
      ipv4_acls:
        type: list
        deprecation:
          warning: true
          removed: true
          remove_in_version: 6.0.0
          new_key: |-
            vrfs[].ipv4_acl
      ipv6_acls:
        type: list
        deprecation:
          warning: true
          removed: true
          remove_in_version: 6.0.0
          new_key: |-
            vrfs[].ipv6_acl
