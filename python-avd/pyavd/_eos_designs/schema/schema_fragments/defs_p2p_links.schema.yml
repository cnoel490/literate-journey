# Copyright (c) 2023-2025 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
# yaml-language-server: $schema=../../../_schema/avd_meta_schema.json
# Line above is used by RedHat's YAML Schema vscode extension
# Use Ctrl + Space to get suggestions for every field. Autocomplete will pop up after typing 2 letters.
type: dict
$defs:
  p2p_links:
    type: list
    items:
      type: dict
      keys:
        id:
          type: int
          convert_types:
            - str
          description: |
            Unique id per subnet_summary. Used to calculate ip addresses.
            Required with ip_pool. ID starting from 1.
        speed:
          type: str
          $ref: eos_cli_config_gen#/keys/ethernet_interfaces/items/keys/speed
        ip_pool:
          type: str
          description: P2P pool name. IP Pool defined under p2p_links_ip_pools. A /31 will be taken from the pool per P2P link.
        subnet:
          type: str
          description: IPv4 address/Mask. Subnet used on this P2P link.
        ip:
          type: list
          description: Specific IP addresses used on this P2P link.
          min_length: 2
          max_length: 2
          items:
            type: str
            description: Node IPv4 address/Mask.
        ipv6_enable:
          type: bool
          default: false
          description: Allows turning on ipv6 for the link or profile (also autodetected based on underlay_rfc5549 and include_in_underlay_protocol).
        nodes:
          type: list
          description: Nodes where this link should be configured.
          min_length: 2
          max_length: 2
          items:
            type: str
            description: |
              The values can be < node_a >, < node_b >.
              ex.- [ core-1-isis-sr-ldp, core-2-ospf-ldp ].
        interfaces:
          type: list
          description: Interfaces where this link should be configured and Required unless using port-channels.
          min_length: 2
          max_length: 2
          items:
            type: str
            description: |
              The value can be like < node_a_interface >, < node_b_interface >.
              ex. - [ Ethernet2, Ethernet2 ].
        as:
          type: list
          description: |
            AS numbers for BGP.
            Required with bgp peering.
          items:
            type: str
            convert_types:
              - int
            description: The values can be like ["node_a_as", "node_b_as"].
        descriptions:
          type: list
          description: Interface descriptions.
          min_length: 2
          max_length: 2
          items:
            type: str
            description: |-
              Description or description template to be used on the ethernet interface.
              This can be a template using the AVD string formatter syntax: https://avd.arista.com/stable/ansible_collections/arista/avd/roles/eos_designs/docs/how-to/custom-descriptions-names.html#avd-string-formatter-syntax.
              The available template fields are:
                - `peer`: The name of the peer.
                - `interface`: The local interface name.
                - `peer_interface`: The interface on the peer.

              The default description is set by `default_underlay_p2p_ethernet_description`.
              By default the description is templated from the name and interface of the peer.
        include_in_underlay_protocol:
          type: bool
          default: true
          description: Add this interface to underlay routing protocol.
        isis_hello_padding:
          type: bool
          default: true
        isis_metric:
          type: int
          convert_types:
            - str
        isis_circuit_type:
          type: str
          valid_values:
            - level-1
            - level-2
            - level-1-2
        isis_authentication_mode:
          type: str
          valid_values:
            - md5
            - text
        isis_authentication_key:
          type: str
          description: |
            Type-7 encrypted password.
            Takes precedence over 'underlay_isis_authentication_key', 'underlay_isis_authentication_cleartext_key'
            and `isis_authentication_cleartext_key`.
        isis_authentication_cleartext_key:
          type: str
          description: |
            Cleartext password.
            Encrypted to Type 7 by AVD.
            Takes precedence over 'underlay_isis_authentication_key' and 'underlay_isis_authentication_cleartext_key'.
            To protect the password at rest it is strongly recommended to make use of a vault or similar.
        isis_network_type:
          type: str
          default: point-to-point
          valid_values:
            - point-to-point
            - broadcast
        mpls_ip:
          type: bool
          description: MPLS parameters. Default value is true if switch.mpls_lsr is true.
        mpls_ldp:
          type: bool
          description: MPLS parameters. Default value is true for ldp underlay variants, otherwise false.
        mtu:
          type: int
          convert_types:
            - str
          description: MTU for this P2P link. Default value same as p2p_uplinks_mtu.
        bfd:
          type: bool
          description: Enable BFD (only considered for BGP).
        ptp:
          description: PTP parameters.
          type: dict
          keys:
            enabled:
              type: bool
              default: false
              description: Enable PTP.
            roles:
              type: list
              description: Role in boundary clock mode for each node. Default is `dynamic`.
              items:
                type: str
                default: "dynamic"
                valid_values:
                  - "dynamic"
                  - "master"
            profile:
              type: str
              default: "aes67-r16-2016"
              description: |-
                Default available profiles are:
                  - "aes67"
                  - "aes67-r16-2016"
                  - "smpte2059-2"
        sflow:
          type: bool
          description: Enable sFlow. Overrides `fabric_sflow` setting.
        multicast_pim_sm:
          type: bool
          description: |-
            Configure PIM sparse-mode on the P2P links.
            Requires node setting `underlay_multicast.pim_sm.enabled: true` or, if unset, global `underlay_multicast_pim_sm: true`
            The default value depends on the value of `include_in_underlay_protocol`:
            * when `include_in_underlay_protocol: true`, the default value is `true`
            * when `include_in_underlay_protocol: false`, the default value is `false`.
        multicast_static:
          type: bool
          description: |-
            Configure static multicast on the P2P links.
            Requires node setting `underlay_multicast.static.enabled: true` or, if unset, global `underlay_multicast_static: true`
            The default value depends on the value of `include_in_underlay_protocol`:
            * when `include_in_underlay_protocol: true`, the default value is `true`
            * when `include_in_underlay_protocol: false`, the default value is `false`.
        flow_tracking:
          type: dict
          $ref: "eos_designs#/$defs/flow_tracking_link"
          description: Enable flow-tracking. Overrides `fabric_flow_tracking` setting.
        qos_profile:
          type: str
          description: QOS service profile.
        macsec_profile:
          type: str
          description: MAC security profile.
        port_channel:
          description: Port-channel parameters.
          type: dict
          keys:
            description:
              type: str
              description: |-
                Description or description template to be used on the port-channel interface.
                This can be a template using the AVD string formatter syntax: https://avd.arista.com/stable/ansible_collections/arista/avd/roles/eos_designs/docs/how-to/custom-descriptions-names.html#avd-string-formatter-syntax.
                The available template fields are:
                  - `peer`: The name of the peer.
                  - `interface`: The local port-channel interface name.
                  - `peer_interface`: The port-channel interface on the peer.
                  - `port_channel_id`: The local port-channel ID.
                  - `peer_port_channel_id`: The ID of the port-channel on the peer.

                Falls back to the description on the `p2p_link` if set. Otherwise default description is set by `default_underlay_p2p_port_channel_description`.
                By default the description is templated from the name and port_channel interface of the peer.
            mode:
              type: str
              valid_values: ["on", "active", "passive"]
              default: active
            channel_id_algorithm:
              type: str
              valid_values:
                - "first_port"
                - "p2p_link_id"
              default: first_port
              description: |-
                Configures how to derive the Port-Channel ID when not set.
                By default the ID is derived from the first switch port in node_child_interfaces[].interfaces.
                The `p2p_link_id` setting will use the `id` for each link plus the `channel_id_offset` to derive the Port-Channel ID.
            channel_id_offset:
              description: Offset added to the ID of the p2p_link when `channel_id_algorithm` is set to `p2p_link_id` and `channel_id` is not set.
              type: int
              convert_types:
                - str
            nodes_child_interfaces:
              type: list
              primary_key: node
              items:
                type: dict
                keys:
                  node:
                    type: str
                  interfaces:
                    type: list
                    description: List of node interfaces. Ex.- [ 'node1 interface1', 'node1 interface2' ].
                    items:
                      type: str
                  channel_id:
                    type: int
                    convert_types:
                      - str
                    description: Port-Channel ID. If no `channel_id` is specified, an id is generated using the `channel_id_algorithm`.
        campus_link_type:
          type: list
          $ref: "eos_designs#/$defs/campus_link_type"
        raw_eos_cli:
          type: str
          description: EOS CLI rendered directly on the point-to-point interface in the final EOS configuration.
        routing_protocol:
          type: str
          valid_values:
            - ebgp
          description: |-
            Enables deviation of the routing protocol used on this link from the fabric underlay default.
            - ebgp: Enforce plain IPv4 BGP peering and exempt the neighbor from the RFC5549 underlay if configured.
        ethernet_structured_config:
          type: dict
          relaxed_validation: true
          $ref: "eos_cli_config_gen#/keys/ethernet_interfaces/items"
          description: Custom structured config for ethernet interfaces.
          documentation_options:
            hide_keys: true
        port_channel_structured_config:
          type: dict
          relaxed_validation: true
          $ref: "eos_cli_config_gen#/keys/port_channel_interfaces/items"
          description: Custom structured config for port-channel links.
          documentation_options:
            hide_keys: true
        underlay_multicast:
          type: bool
          deprecation:
            removed: true
            warning: true
            new_key: multicast_pim_sm
            remove_in_version: 6.0.0
        structured_config:
          type: dict
          deprecation:
            warning: true
            removed: true
            remove_in_version: 6.0.0
            new_key: ethernet_structured_config or port_channel_structured_config
