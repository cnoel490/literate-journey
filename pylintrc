[MASTER]
ignore-paths=
  # We will Pylint for ansible_collections separately since it uses it's own pylintrc in the collection root.
  ansible_collections,
  # The cv_client api is generated from proto files, so it should not be linted.
  python-avd/pyavd/_cv/api,
  # The schema/__init__.py are generated, so they should not be linted.
  python-avd/pyavd/_eos_cli_config_gen/schema/__init__.py,
  python-avd/pyavd/_eos_designs/schema/__init__.py,
  python-avd/pyavd/_eos_designs/eos_designs_facts/schema/protocol.py,
  python-avd/tests/pyavd/schema/data_merging_schema_class.py,

[MESSAGES CONTROL]
disable=
    attribute-defined-outside-init,
    duplicate-code,
    expression-not-assigned,
    fixme,
    global-statement,
    import-error,
    inconsistent-return-statements,
    invalid-name,
    line-too-long,
    missing-docstring,
    no-member,
    pointless-string-statement,
    protected-access,
    redefined-builtin,
    redefined-outer-name,
    too-few-public-methods,
    too-many-ancestors,
    too-many-arguments,
    too-many-positional-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-locals,
    too-many-nested-blocks,
    too-many-public-methods,
    too-many-return-statements,
    too-many-statements,
    wrong-import-position,
    # Disabling other rules covered by ruff
    # Error
    assigning-non-slot,
    await-outside-async,
    bad-format-character,
    bad-str-strip-call,
    bad-string-format-type,
    bidirectional-unicode,
    continue-in-finally,
    duplicate-bases,
    format-needs-mapping,
    function-redefined,
    init-is-generator,
    invalid-all-format,
    invalid-all-object,
    invalid-bool-returned,
    invalid-bytes-returned,
    invalid-character-backspace,
    invalid-character-esc,
    invalid-character-nul,
    invalid-character-sub,
    invalid-character-zero-width-space,
    invalid-hash-returned,
    invalid-index-returned,
    invalid-length-returned,
    logging-too-few-args,
    logging-too-many-args,
    misplaced-bare-raise,
    missing-format-string-key,
    mixed-format-string,
    modified-iterating-set,
    no-self-argument,
    nonexistent-operator,
    nonlocal-and-global,
    nonlocal-without-binding,
    not-in-loop,
    notimplemented-raised,
    potential-index-error,
    relative-beyond-top-level,
    repeated-keyword,
    return-in-init,
    return-outside-function,
    singledispatch-method,
    singledispatchmethod-function,
    syntax-error,
    too-few-format-args,
    too-many-format-args,
    too-many-star-expressions,
    truncated-format-string,
    undefined-all-variable,
    undefined-variable,
    unexpected-special-method-signature,
    used-prior-global-declaration,
    yield-inside-async-function,
    yield-outside-function,
    # Warning
    anomalous-backslash-in-string,
    assert-on-string-literal,
    assert-on-tuple,
    # bad-dunder-name, # Part of a PyLint extension we don't use.
    bad-format-string,
    bad-open-mode,
    bad-staticmethod-argument,
    bare-except,
    binary-op-exception,
    broad-exception-caught,
    broad-exception-raised,
    cell-var-from-loop,
    # consider-ternary-expression, # Part of a PyLint extension we don't use.
    dangerous-default-value,
    duplicate-except,
    duplicate-key,
    duplicate-value,
    # eq-without-hash, # Part of a PyLint extension we don't use.
    eval-used,
    exec-used,
    # expression-not-assigned,
    f-string-without-interpolation,
    # fixme,
    forgotten-debug-statement,
    format-combined-specification,
    format-string-without-interpolation,
    global-at-module-level,
    # global-statement,
    global-variable-not-assigned,
    implicit-str-concat,
    import-self,
    inconsistent-quotes,
    invalid-envvar-default,
    keyword-arg-before-vararg,
    logging-format-interpolation,
    logging-fstring-interpolation,
    logging-not-lazy,
    lost-exception,
    method-cache-max-size-none,
    misplaced-future,
    missing-format-argument-key,
    named-expr-without-context,
    nan-comparison,
    nested-min-max,
    non-ascii-file-name,
    pointless-exception-statement,
    pointless-statement,
    # protected-access,
    raise-missing-from,
    # redefined-builtin,
    # redefined-loop-name, # Part of a PyLint extension we don't use.
    redundant-u-string-prefix,
    reimported,
    self-assigning-variable,
    subprocess-popen-preexec-fn,
    subprocess-run-check,
    super-without-brackets,
    try-except-raise,
    unnecessary-lambda,
    unnecessary-pass,
    unnecessary-semicolon,
    unspecified-encoding,
    unused-argument,
    unused-format-string-argument,
    unused-format-string-key,
    unused-import,
    unused-variable,
    useless-else-on-loop,
    useless-with-lock,
    wildcard-import,
    # Convention
    bad-classmethod-argument,
    # bad-docstring-quotes, # Part of a PyLint extension we don't use.
    compare-to-empty-string,
    consider-iterating-dictionary,
    # consider-using-any-or-all, # Part of a PyLint extension we don't use.
    consider-using-dict-items,
    # docstring-first-line-empty , # Part of a PyLint extension we don't use.
    empty-docstring,
    import-outside-toplevel,
    # import-private-name, # Part of a PyLint extension we don't use.
    # invalid-name,
    # line-too-long,
    # misplaced-comparison-constant, # Part of a PyLint extension we don't use.
    missing-class-docstring,
    missing-final-newline,
    missing-function-docstring,
    missing-module-docstring,
    multiple-imports,
    multiple-statements,
    non-ascii-module-import,
    non-ascii-name,
    single-string-used-for-slots,
    singleton-comparison,
    trailing-newlines,
    trailing-whitespace,
    typevar-double-variance,
    typevar-name-incorrect-variance,
    typevar-name-mismatch,
    ungrouped-imports,
    unidiomatic-typecheck,
    unnecessary-direct-lambda-call,
    unnecessary-dunder-call,
    unnecessary-lambda-assignment,
    unneeded-not,
    use-implicit-booleaness-not-len,
    use-sequence-for-iteration,
    useless-import-alias,
    wrong-import-order,
    # wrong-import-position,
    # Refactor
    comparison-of-constants,
    comparison-with-itself,
    # consider-alternative-union-syntax, # Part of a PyLint extension we don't use.
    consider-merging-isinstance,
    # consider-using-alias, # Part of a PyLint extension we don't use.
    # consider-using-augmented-assign, # Part of a PyLint extension we don't use.
    consider-using-dict-comprehension,
    consider-using-from-import,
    consider-using-generator,
    consider-using-get,
    consider-using-in,
    consider-using-min-builtin,
    consider-using-max-builtin,
    consider-using-set-comprehension,
    consider-using-sys-exit,
    # consider-using-ternary,  # Marked as removed in ruff
    consider-using-with,
    # else-if-used, # Part of a PyLint extension we don't use.
    # empty-comment, # Part of a PyLint extension we don't use.
    # inconsistent-return-statements,
    literal-comparison,
    # magic-value-comparison, # Part of a PyLint extension we don't use.
    no-classmethod-decorator,
    no-else-break,
    no-else-continue,
    no-else-raise,
    no-else-return,
    no-staticmethod-decorator,
    property-with-parameters,
    redefined-argument-from-local,
    simplifiable-if-expression,
    simplifiable-if-statement,
    super-with-arguments,
    # too-complex, # Part of a PyLint extension we don't use.
    # too-many-arguments,
    too-many-boolean-expressions,
    # too-many-branches,
    # too-many-locals,
    # too-many-nested-blocks,
    # too-many-public-methods,
    # too-many-return-statements,
    # too-many-statements,
    trailing-comma-tuple,
    unnecessary-comprehension,
    unnecessary-dict-index-lookup,
    unnecessary-list-index-lookup,
    use-a-generator,
    use-dict-literal,
    use-list-literal,
    # use-set-for-membership, # Part of a PyLint extension we don't use.
    useless-object-inheritance,
    useless-return,
